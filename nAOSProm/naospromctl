#!/system/bin/sh

SETGET=$1
CMD=$2
SETVAL=$3

KERNEL_PROP=/sdcard/.nAOSProm.prop
BUILD_PROP=/system/build.prop
HW_CONFIG=/system/etc/hw_config.sh

help() {
    echo "
naospromctl usage:

naosprom <get|set> <prop> [<value to set>]

get:
  zram-size : display the zram disk size in octet (0 if disabled)
  lightbar-mode : lightbar mode
  kernel : kernel that will be flashed in the recovery
  hw-keys-layout : hw keys layout
  hw-keys-music : hw keys for music
  doze-brightness : brightness level for doze
  minfree : absolute min free for android low memory killer
  dt2w : double tap to wake
  shake2w : shake to wake
  
set:
  zram-size <value in octet> : set the disk size (set 0 to disable zram)
  lightbar-mode <0|1|2> : 0 to disable lightbar, 1 for lightbar with timeout and 2 for lightbar on/off with screen
  kernel <standard|oc|oc_ultra> : kernel to use for the next flash of the rom
  hw-keys-layout <0|1> : layout to use (0 for 2.3, 1 for 4.4+)
  hw-keys-music <0|1>: music controls (0 for disable, 1 for enable)
  doze-brightness <brightness> : set the brightness for doze (-1 to use the default configuration)
  minfree <value in KiB> : absolute min free for android low memory killer
  dt2w <true|false>: double tap to wake
  shake2w <true|false>: shake to wake
"

    exit 1
}

[ $# -lt 2 ] && help
[ "$SETGET" == "set" ] && [ $# -ne 3 ] && help

case "$SETGET" in
    "get")

        case "$CMD" in
            "zram-size")
                /system/xbin/egrep '^sys.zram.size=' $BUILD_PROP 2>/dev/null | /system/xbin/cut -d= -f2
                ;;
            "kernel")
                echo "
                    (/system/xbin/egrep '^kernel=' $KERNEL_PROP 2>/dev/null || echo \"kernel=standard\") | /system/xbin/cut -d= -f2
                    " | su
                ;;
            "lightbar-mode")
                /system/xbin/egrep '^sys.lightbar.mode=' $BUILD_PROP 2>/dev/null | /system/xbin/cut -d= -f2
                ;;
            "hw-keys-layout")
                /system/xbin/egrep '^qemu.hw.mainkeys.layout=' $BUILD_PROP 2>/dev/null | /system/xbin/cut -d= -f2
                ;;
            "hw-keys-music")
                /system/xbin/egrep '^qemu.hw.mainkeys.music=' $BUILD_PROP 2>/dev/null | /system/xbin/cut -d= -f2 | sed 's/1/true/;s/0/false/'
                ;;
            "doze-brightness")
                /system/xbin/egrep '^sys.screen.doze.brightness=' $BUILD_PROP 2>/dev/null | /system/xbin/cut -d= -f2
                ;;
            "minfree")
                /system/xbin/egrep '^sys.ram.minfree=' $BUILD_PROP 2>/dev/null | /system/xbin/cut -d= -f2
                ;;
            "dt2w")
                /system/xbin/egrep -q '^echo.*1.*>.*/sys/class/input/input3/wakeup' $HW_CONFIG && echo "true" || echo "false"
                ;;
            "shake2w")
                /system/xbin/egrep -q '^echo.*>.*dev/tap_mode' $HW_CONFIG && echo "true" || echo "false"
                ;;
            *)
                help
                ;;
        esac
        
        #end get
        ;;
    
    "set")
    
        REMOUNT=0
        if (grep '/system' /proc/mounts | cut -d' ' -f4 | grep -q 'ro'); then
            REMOUNT=1
        fi
        
        case "$CMD" in
            "kernel")
                [ "$SETVAL" == "-1" ] && exit 0
                echo "
                    if ( egrep -q '^kernel=' $KERNEL_PROP 2>/dev/null ); then
                        sed -i \"s/^kernel=.*/kernel=$SETVAL/\" $KERNEL_PROP
                    else
                        echo \"kernel=$SETVAL\" >> $KERNEL_PROP
                    fi
                    " | su
                ;;
            "zram-size")
                [ "$SETVAL" == "-1" ] && exit 0
                if [ "$SETVAL" == "0" ]; then
                    ZRAMSTATE=false
                else
                    ZRAMSTATE=true
                fi

                echo "
                    [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                    sed -i \"s/^sys.zram.enable=.*/sys.zram.enable=$ZRAMSTATE/\" $BUILD_PROP ;
                    sed -i \"s/^sys.zram.size=.*/sys.zram.size=$SETVAL/\" $BUILD_PROP ;
                    [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                    " | su
                ;;
            "lightbar-mode")
                echo "
                    [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                    sed -i \"s/^sys.lightbar.mode=.*/sys.lightbar.mode=$SETVAL/\" $BUILD_PROP ;
                    [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                    " | su
                ;;
            "hw-keys-layout")
                echo "
                    [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                    sed -i \"s/^qemu.hw.mainkeys.layout=.*/qemu.hw.mainkeys.layout=$SETVAL/\" $BUILD_PROP ;
                    [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                    " | su
                ;;
            "hw-keys-music")
                if [ "$SETVAL" == "true" ]; then
                    SETVAL=1
                else
                    SETVAL=0
                fi
                echo "
                    [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                    sed -i \"s/^qemu.hw.mainkeys.music=.*/qemu.hw.mainkeys.music=$SETVAL/\" $BUILD_PROP ;
                    [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                    " | su
                ;;
            "doze-brightness")
                [ "$SETVAL" == "-2" ] && exit 0
                echo "
                    [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                    sed -i \"s/^sys.screen.doze.brightness=.*/sys.screen.doze.brightness=$SETVAL/\" $BUILD_PROP ;
                    [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                    " | su
                ;;
            "minfree")
                [ "$SETVAL" == "-2" ] && exit 0
                echo "
                    [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                    sed -i \"s/^sys.ram.minfree=.*/sys.ram.minfree=$SETVAL/\" $BUILD_PROP ;
                    [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                    " | su
                ;;
            "dt2w")
                if [ "$SETVAL" == "true" ]; then
                    echo "
                        [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                        sed -i 's|^#echo.*>.*/sys/class/input/input3/wakeup|echo 1 > /sys/class/input/input3/wakeup|' $HW_CONFIG ;
                        [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                        " | su
                else
                    echo "
                        [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                        sed -i 's|^echo.*1.*>.*/sys/class/input/input3/wakeup|#echo 1 > /sys/class/input/input3/wakeup|' $HW_CONFIG ;
                        [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                        " | su
                fi
                ;;
            "shake2w")
                if [ "$SETVAL" == "true" ]; then
                    echo "
                        [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                        sed -i 's|^#echo\(.*\)>.*dev/tap_mode|echo\1> \$dev/tap_mode|' $HW_CONFIG ;
                        [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                        " | su
                else
                    echo "
                        [ $REMOUNT -eq 1 ] && mount -o remount,rw /system ;
                        sed -i 's|^echo\(.*\)>.*dev/tap_mode|#echo\1> \$dev/tap_mode|' $HW_CONFIG ;
                        [ $REMOUNT -eq 1 ] && mount -o remount,ro /system ;
                        " | su
                fi
                ;;
            *)                                                                                                               
                help                                                                                                         
                ;;
        esac
        
        #end set
        ;;

esac

exit 0

